import{C as $,D as H,E as S,G as L,H as P,I,J as R,K as A,L as C,i as y,f as D,h as W,u as U,j as k,M as B}from"./b9GoV8el.js";async function F(e,t){return await G(t).catch(i=>(console.error("Failed to get image meta for "+t,i+""),{width:0,height:0,ratio:0}))}async function G(e){if(typeof Image>"u")throw new TypeError("Image not supported");return new Promise((t,n)=>{const i=new Image;i.onload=()=>{const r={width:i.width,height:i.height,ratio:i.width/i.height};t(r)},i.onerror=r=>n(r),i.src=e})}function j(e){return t=>t?e[t]||t:e.missingValue}function T({formatter:e,keyMap:t,joinWith:n="/",valueMap:i}={}){e||(e=(s,o)=>`${s}=${o}`),t&&typeof t!="function"&&(t=j(t));const r=i||{};return Object.keys(r).forEach(s=>{typeof r[s]!="function"&&(r[s]=j(r[s]))}),(s={})=>Object.entries(s).filter(([d,u])=>typeof u<"u").map(([d,u])=>{const f=r[d];return typeof f=="function"&&(u=f(s[d])),d=typeof t=="function"?t(d):d,e(d,u)}).join(n)}function g(e=""){if(typeof e=="number")return e;if(typeof e=="string"&&e.replace("px","").match(/^\d+$/g))return Number.parseInt(e,10)}function J(e=""){if(e===void 0||!e.length)return[];const t=new Set;for(const n of e.split(" ")){const i=Number.parseInt(n.replace("x",""));i&&t.add(i)}return Array.from(t)}function V(e){if(e.length===0)throw new Error("`densities` must not be empty, configure to `1` to render regular size only (DPR 1.0)")}function Q(e){const t={};if(typeof e=="string")for(const n of e.split(/[\s,]+/).filter(i=>i)){const i=n.split(":");i.length!==2?t["1px"]=i[0].trim():t[i[0].trim()]=i[1].trim()}else Object.assign(t,e);return t}function X(e){const t={options:e},n=(r,s={})=>O(t,r,s),i=(r,s={},o={})=>n(r,{...o,modifiers:P(s,o.modifiers||{})}).url;for(const r in e.presets)i[r]=(s,o,d)=>i(s,o,{...e.presets[r],...d});return i.options=e,i.getImage=n,i.getMeta=(r,s)=>Y(t,r,s),i.getSizes=(r,s)=>ee(t,r,s),t.$img=i,i}async function Y(e,t,n){const i=O(e,t,{...n});return typeof i.getMeta=="function"?await i.getMeta():await F(e,i.url)}function O(e,t,n){var f,h;if(t&&typeof t!="string")throw new TypeError(`input must be a string (received ${typeof t}: ${JSON.stringify(t)})`);if(!t||t.startsWith("data:"))return{url:t};const{provider:i,defaults:r}=Z(e,n.provider||e.options.provider),s=K(e,n.preset);if(t=$(t)?t:H(t),!i.supportsAlias)for(const m in e.options.alias)t.startsWith(m)&&(t=S(e.options.alias[m],t.substr(m.length)));if(i.validateDomains&&$(t)){const m=L(t).host;if(!e.options.domains.find(v=>v===m))return{url:t}}const o=P(n,s,r);o.modifiers={...o.modifiers};const d=o.modifiers.format;(f=o.modifiers)!=null&&f.width&&(o.modifiers.width=g(o.modifiers.width)),(h=o.modifiers)!=null&&h.height&&(o.modifiers.height=g(o.modifiers.height));const u=i.getImage(t,o,e);return u.format=u.format||d||"",u}function Z(e,t){const n=e.options.providers[t];if(!n)throw new Error("Unknown provider: "+t);return n}function K(e,t){if(!t)return{};if(!e.options.presets[t])throw new Error("Unknown preset: "+t);return e.options.presets[t]}function ee(e,t,n){var l,b,_,z,x;const i=g((l=n.modifiers)==null?void 0:l.width),r=g((b=n.modifiers)==null?void 0:b.height),s=Q(n.sizes),o=(_=n.densities)!=null&&_.trim()?J(n.densities.trim()):e.options.densities;V(o);const d=i&&r?r/i:0,u=[],f=[];if(Object.keys(s).length>=1){for(const c in s){const p=M(c,String(s[c]),r,d,e);if(p!==void 0){u.push({size:p.size,screenMaxWidth:p.screenMaxWidth,media:`(max-width: ${p.screenMaxWidth}px)`});for(const w of o)f.push({width:p._cWidth*w,src:N(e,t,n,p,w)})}}te(u)}else for(const c of o){const p=Object.keys(s)[0];let w=M(p,String(s[p]),r,d,e);w===void 0&&(w={size:"",screenMaxWidth:0,_cWidth:(z=n.modifiers)==null?void 0:z.width,_cHeight:(x=n.modifiers)==null?void 0:x.height}),f.push({width:c,src:N(e,t,n,w,c)})}ie(f);const h=f[f.length-1],m=u.length?u.map(c=>`${c.media?c.media+" ":""}${c.size}`).join(", "):void 0,v=m?"w":"x",a=f.map(c=>`${c.src} ${c.width}${v}`).join(", ");return{sizes:m,srcset:a,src:h==null?void 0:h.src}}function M(e,t,n,i,r){const s=r.options.screens&&r.options.screens[e]||Number.parseInt(e),o=t.endsWith("vw");if(!o&&/^\d+$/.test(t)&&(t=t+"px"),!o&&!t.endsWith("px"))return;let d=Number.parseInt(t);if(!s||!d)return;o&&(d=Math.round(d/100*s));const u=i?Math.round(d*i):n;return{size:t,screenMaxWidth:s,_cWidth:d,_cHeight:u}}function N(e,t,n,i,r){return e.$img(t,{...n.modifiers,width:i._cWidth?i._cWidth*r:void 0,height:i._cHeight?i._cHeight*r:void 0},n)}function te(e){var n;e.sort((i,r)=>i.screenMaxWidth-r.screenMaxWidth);let t=null;for(let i=e.length-1;i>=0;i--){const r=e[i];r.media===t&&e.splice(i,1),t=r.media}for(let i=0;i<e.length;i++)e[i].media=((n=e[i+1])==null?void 0:n.media)||""}function ie(e){e.sort((n,i)=>n.width-i.width);let t=null;for(let n=e.length-1;n>=0;n--){const i=e[n];i.width===t&&e.splice(n,1),t=i.width}}const ne=T({keyMap:{format:"f",fit:"fit",width:"w",height:"h",resize:"s",quality:"q",background:"b"},joinWith:"&",formatter:(e,t)=>I(e)+"_"+I(t)}),re=(e,{modifiers:t={},baseURL:n}={},i)=>{t.width&&t.height&&(t.resize=`${t.width}x${t.height}`,delete t.width,delete t.height);const r=ne(t)||"_";return n||(n=S(i.options.nuxt.baseURL,"/_ipx")),{url:S(n,r,R(e))}},se=!0,oe=!0,ae=Object.freeze(Object.defineProperty({__proto__:null,getImage:re,supportsAlias:oe,validateDomains:se},Symbol.toStringTag,{value:"Module"})),E={screens:{xs:320,sm:640,md:768,lg:1024,xl:1280,xxl:1536,"2xl":1536},presets:{},provider:"ipx",domains:[],alias:{},densities:[1,2],format:["webp"]};E.providers={ipx:{provider:ae,defaults:{}}};const q=()=>{const e=C(),t=A();return t.$img||t._img||(t._img=X({...E,nuxt:{baseURL:e.app.baseURL}}))};function de(e){var t;(t=performance==null?void 0:performance.mark)==null||t.call(performance,"mark_feature_usage",{detail:{feature:e}})}const ue={src:{type:String,default:void 0},format:{type:String,default:void 0},quality:{type:[Number,String],default:void 0},background:{type:String,default:void 0},fit:{type:String,default:void 0},modifiers:{type:Object,default:void 0},preset:{type:String,default:void 0},provider:{type:String,default:void 0},sizes:{type:[Object,String],default:void 0},densities:{type:String,default:void 0},preload:{type:[Boolean,Object],default:void 0},width:{type:[String,Number],default:void 0},height:{type:[String,Number],default:void 0},alt:{type:String,default:void 0},referrerpolicy:{type:String,default:void 0},usemap:{type:String,default:void 0},longdesc:{type:String,default:void 0},ismap:{type:Boolean,default:void 0},loading:{type:String,default:void 0,validator:e=>["lazy","eager"].includes(e)},crossorigin:{type:[Boolean,String],default:void 0,validator:e=>["anonymous","use-credentials","",!0,!1].includes(e)},decoding:{type:String,default:void 0,validator:e=>["async","auto","sync"].includes(e)},nonce:{type:[String],default:void 0}},fe=e=>{const t=y(()=>({provider:e.provider,preset:e.preset})),n=y(()=>({width:g(e.width),height:g(e.height),alt:e.alt,referrerpolicy:e.referrerpolicy,usemap:e.usemap,longdesc:e.longdesc,ismap:e.ismap,crossorigin:e.crossorigin===!0?"anonymous":e.crossorigin||void 0,loading:e.loading,decoding:e.decoding,nonce:e.nonce})),i=q(),r=y(()=>({...e.modifiers,width:g(e.width),height:g(e.height),format:e.format,quality:e.quality||i.options.quality,background:e.background,fit:e.fit}));return{options:t,attrs:n,modifiers:r}},ce={...ue,placeholder:{type:[Boolean,String,Number,Array],default:void 0},placeholderClass:{type:String,default:void 0}},ge=D({name:"NuxtImg",props:ce,emits:["load","error"],setup:(e,t)=>{const n=q(),i=fe(e),r=W(!1),s=W(),o=y(()=>n.getSizes(e.src,{...i.options.value,sizes:e.sizes,densities:e.densities,modifiers:{...i.modifiers.value,width:g(e.width),height:g(e.height)}})),d=y(()=>{const a={...i.attrs.value,"data-nuxt-img":""};return(!e.placeholder||r.value)&&(a.sizes=o.value.sizes,a.srcset=o.value.srcset),a}),u=y(()=>{let a=e.placeholder;if(a===""&&(a=!0),!a||r.value)return!1;if(typeof a=="string")return a;const l=Array.isArray(a)?a:typeof a=="number"?[a,a]:[10,10];return n(e.src,{...i.modifiers.value,width:l[0],height:l[1],quality:l[2]||50,blur:l[3]||3},i.options.value)}),f=y(()=>e.sizes?o.value.src:n(e.src,i.modifiers.value,i.options.value)),h=y(()=>u.value?u.value:f.value);if(e.preload){const a=Object.values(o.value).every(l=>l);U({link:[{rel:"preload",as:"image",nonce:e.nonce,...a?{href:o.value.src,imagesizes:o.value.sizes,imagesrcset:o.value.srcset}:{href:h.value},...typeof e.preload!="boolean"&&e.preload.fetchPriority?{fetchpriority:e.preload.fetchPriority}:{}}]})}const v=A().isHydrating;return k(()=>{if(u.value){const a=new Image;a.src=f.value,e.sizes&&(a.sizes=o.value.sizes||"",a.srcset=o.value.srcset),a.onload=l=>{r.value=!0,t.emit("load",l)},de("nuxt-image");return}s.value&&(s.value.complete&&v&&(s.value.getAttribute("data-error")?t.emit("error",new Event("error")):t.emit("load",new Event("load"))),s.value.onload=a=>{t.emit("load",a)},s.value.onerror=a=>{t.emit("error",a)})}),()=>B("img",{ref:s,...d.value,...t.attrs,class:e.placeholder&&!r.value?[e.placeholderClass]:void 0,src:h.value})}});export{ge as _};
